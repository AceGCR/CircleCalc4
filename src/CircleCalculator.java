/**
 * Circle Jerk V1.0 Calculates and displays Radius, Area,and Circumference for a
 * circle given any of the other values as an input. Calculated values are left
 * in the input text fields as the new default values, doubling the fields as
 * output displays and editable new queries.
 * @version 1.0
 * 1/3/13
 * @author Ace_GCR_
 */
public class CircleCalculator extends javax.swing.JFrame {

	/**
	 * Creates new form CircleCalculator
	 */
	public CircleCalculator() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		RadLabel = new javax.swing.JLabel();
		AreaLabel = new javax.swing.JLabel();
		CircumferenceLabel = new javax.swing.JLabel();
		radius_Input = new javax.swing.JTextField();
		area_Input = new javax.swing.JTextField();
		circumference_Input = new javax.swing.JTextField();

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(
				jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 567,
				Short.MAX_VALUE));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 372,
				Short.MAX_VALUE));

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Circle Jerk");
		setName("CircleJerkFrame"); // NOI18N
		setResizable(false);

		RadLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		RadLabel.setText("   Radius   ");

		AreaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		AreaLabel.setText("Area");

		CircumferenceLabel.setText("Circumference");

		radius_Input.setText("Enter Radius");
		radius_Input.setToolTipText("Enter a vlaue for the radius here.");
		radius_Input.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				radius_InputActionPerformed(evt);
			}
		});

		area_Input.setText("Enter Area");
		area_Input.setToolTipText("Enter a value for the area");
		area_Input.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				area_InputActionPerformed(evt);
			}
		});

		circumference_Input.setHorizontalAlignment(javax.swing.JTextField.LEFT);
		circumference_Input.setText("Enter Circumference");
		circumference_Input
				.setToolTipText("Enter a value for the circumference");
		circumference_Input
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						circumference_InputActionPerformed(evt);
					}
				});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGap(129,
																		129,
																		129)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.CENTER)
																				.addComponent(
																						CircumferenceLabel,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						105,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						circumference_Input,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						180,
																						javax.swing.GroupLayout.PREFERRED_SIZE)))
												.addGroup(
														layout.createSequentialGroup()
																.addContainerGap()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.CENTER)
																				.addComponent(
																						radius_Input,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						180,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						RadLabel,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						107,
																						javax.swing.GroupLayout.PREFERRED_SIZE))
																.addGap(82, 82,
																		82)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.CENTER)
																				.addComponent(
																						AreaLabel,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						105,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						area_Input,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						180,
																						javax.swing.GroupLayout.PREFERRED_SIZE))))
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGap(38, 38, 38)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														AreaLabel,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														26, Short.MAX_VALUE)
												.addComponent(RadLabel))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														radius_Input,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(
														area_Input,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										41, Short.MAX_VALUE)
								.addComponent(CircumferenceLabel,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										20,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(circumference_Input,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(18, 18, 18)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void area_InputActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_area_InputActionPerformed
	// ****************** Area In Action
	// Calculate and display Radius and Cicumference from area
		double areaIn = Float.parseFloat(area_Input.getText());
		double CRadius = Math.sqrt((areaIn / (2 * Math.PI)));
		double CCircum = Math.PI * CRadius;
		String radiusStr = new String();
		radiusStr = String.valueOf(CRadius);
		String circumStr;
		circumStr = new String();
		circumStr = String.valueOf(CCircum);
		circumference_Input.setText(circumStr);
		radius_Input.setText(radiusStr);
	}// GEN-LAST:event_area_InputActionPerformed
		// ****************** Circumference In Action
	// Calculate and display Radius and Area from Circumference

	private void circumference_InputActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_circumference_InputActionPerformed
		double areaIn = Float.parseFloat(circumference_Input.getText());
		double CRadius = areaIn / Math.PI;
		double CArea = 2 * Math.PI * (Math.pow(CRadius, 2));
		String areaStr = new String();
		String radiusStr = new String();
		radiusStr = String.valueOf(CRadius);
		areaStr = String.valueOf(CArea);
		area_Input.setText(areaStr);
		radius_Input.setText(radiusStr);
	}// GEN-LAST:event_circumference_InputActionPerformed

	// ****************** Radius In Action

	private void radius_InputActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_radius_InputActionPerformed
		double radin = Float.parseFloat(radius_Input.getText());
		double CCircum = radin * Math.PI;
		double CArea = 2 * Math.PI * (Math.pow(radin, 2));
		String AreaStr = new String();
		String CircStr = new String();
		AreaStr = String.valueOf(CArea);
		CircStr = new String();
		CircStr = String.valueOf(CCircum);
		area_Input.setText(AreaStr);
		circumference_Input.setText(CircStr);
	}// GEN-LAST:event_radius_InputActionPerformed

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger
					.getLogger(CircleCalculator.class.getName()).log(
							java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger
					.getLogger(CircleCalculator.class.getName()).log(
							java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger
					.getLogger(CircleCalculator.class.getName()).log(
							java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger
					.getLogger(CircleCalculator.class.getName()).log(
							java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new CircleCalculator().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel AreaLabel;
	private javax.swing.JLabel CircumferenceLabel;
	private javax.swing.JLabel RadLabel;
	private javax.swing.JTextField area_Input;
	private javax.swing.JTextField circumference_Input;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JTextField radius_Input;
	// End of variables declaration//GEN-END:variables
}
